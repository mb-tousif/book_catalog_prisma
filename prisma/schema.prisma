generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  customer
  user
}

enum OrderStatus {
  pending
  shipped
  delivered
}

model User {
  id                String            @id @default(uuid())
  name              String
  email             String            @unique
  password          String
  role              Role              @default(customer)
  contactNo         String
  address           String
  profileImg        String            @default("https://i.imgur.com/HeIi0wU.png")
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  reviewsAndRatings ReviewAndRating[]
  orders            Order[]

  @@map("users")
}

model Category {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  books     Book[]

  @@map("categories")
}

model Book {
  id              String   @id @default(uuid())
  title           String
  author          String
  price           Float
  genre           String
  publicationDate String
  category        Category @relation(fields: [categoryId], references: [id])
  categoryId      String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  orders            OrderedBook[]
  reviewsAndRatings ReviewAndRating[]

  @@map("books")
}

model ReviewAndRating {
  id        String   @id @default(uuid())
  review    String
  rating    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("reviewsAndRatings")
}

model Order {
  id           String        @id @default(uuid())
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  status       OrderStatus   @default(pending)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  orderedBooks OrderedBook[]

  @@map("orders")
}

model OrderedBook {
  id        String   @id @default(uuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  bookId    String
  book      Book     @relation(fields: [bookId], references: [id])
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("orderedBooks")
}
